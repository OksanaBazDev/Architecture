name: dockercompose9427769813573280845
services:
  frontend:
    build:
      context: D:\GITHub\Architecture\architecture-sprint-8-main\ReportProject\frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_KEYCLOAK_CLIENT_ID: reports-frontend
      REACT_APP_KEYCLOAK_REALM: reports-realm
      REACT_APP_KEYCLOAK_URL: http://localhost:8080
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3000
        published: "3000"
        protocol: tcp
  keycloak:
    command:
      - start-dev
      - --import-realm
    depends_on:
      keycloak_db:
        condition: service_started
        required: true
    environment:
      KC_DB: postgres
      KC_DB_PASSWORD: keycloak_password
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak_db
      KC_DB_USERNAME: keycloak_user
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    image: quay.io/keycloak/keycloak:21.1
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
    volumes:
      - type: bind
        source: D:\GITHub\Architecture\architecture-sprint-8-main\ReportProject\keycloak\realm-export.json
        target: /opt/keycloak/data/import/realm-export.json
        bind:
          create_host_path: true
  keycloak_db:
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_PASSWORD: keycloak_password
      POSTGRES_USER: keycloak_user
    image: postgres:14
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5433"
        protocol: tcp
    volumes:
      - type: bind
        source: D:\GITHub\Architecture\architecture-sprint-8-main\ReportProject\postgres-keycloak-data
        target: /var/lib/postgresql/data
        bind:
          create_host_path: true
  reportproject:
    build:
      context: D:\GITHub\Architecture\architecture-sprint-8-main\ReportProject
      dockerfile: API/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ReportProject
      target: base
    container_name: ReportProject
    depends_on:
      keycloak:
        condition: service_started
        required: true
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8000"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      Keycloak__ServiceName: keycloak:8080
      Logging__Default: Trace
      Microsoft.AspNetCore__Default: Trace
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages;/.nuget/fallbackpackages2;/.nuget/fallbackpackages3
    image: reportproject:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages --additionalProbingPath /.nuget/fallbackpackages2 --additionalProbingPath /.nuget/fallbackpackages3  "/app/bin/Debug/net9.0/ReportProject.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8000
        published: "8000"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: D:\GITHub\Architecture\architecture-sprint-8-main\ReportProject\API
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: D:\GITHub\Architecture\architecture-sprint-8-main\ReportProject
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\.nuget\packages
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\DevExpress 21.2\Components\Offline Packages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages2
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\DevExpress 24.1\Components\Offline Packages
        target: /.nuget/fallbackpackages3
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net6.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose9427769813573280845_default